import{d as F,z as o,o as i,a as m,b as G,j as D,p as j,H as b,I as y,R as I,P as E,t as A,_,aE as U,as as S,G as u,g as d,h as s,L as t,c as $,f as x,ax as M,aR as P,aQ as C}from"./chunks/framework.e2Sa0dFk.js";import{_ as f}from"./chunks/my-form-item.vue_vue_type_script_setup_true_lang.BrIceaFX.js";const N={class:"base"},O={key:0,class:"operator"},z={class:"value"},J=F({__name:"grid-base",props:{containerStyle:{default:()=>({})}},setup(v){const g=v,p=o((a=>{const e=[];for(let n=0;n<a;n++){const h=Math.floor(Math.random()*256),r=Math.floor(Math.random()*256),c=Math.floor(Math.random()*256);e.push({value:n+1,style:{backgroundColor:`rgba(${h},${r},${c},0.5)`},class:`${n<3?"a":n<6?"b":"c"} item-${n+1}`})}return e})(9));return(a,e)=>(i(),m("div",N,[a.$slots.default?(i(),m("div",O,[G(a.$slots,"default",{},void 0,!0)])):D("",!0),j("div",{class:"container",style:I(g.containerStyle)},[(i(!0),m(b,null,y(p.value,(n,h)=>(i(),m("div",E({class:"item",key:`item-${h}`,ref_for:!0},{style:{"background-color":n.style.backgroundColor},class:n.class}),[j("div",z,A(n.value),1)],16))),128))],4)]))}}),B=_(J,[["__scopeId","data-v-8287696a"]]),R=F({setup(){return()=>U(B,{class:"grid-template-areas"})}}),L=_(R,[["__scopeId","data-v-4812c36f"]]),T=F({__name:"grid-auto-flow",setup(v){const g=S(),l=o([{field:"grid-auto-flow",label:"grid-auto-flow",mode:"select",options:[{label:"row",value:"row"},{label:"column",value:"column"},{label:"row dense",value:"row dense"},{label:"column dense",value:"column dense"}]}]),p=o({"grid-auto-flow":g["grid-auto-flow"]||"row"});return(a,e)=>{const n=u("el-form"),h=u("el-card");return i(),d(B,E({class:"grid-auto-flow"},{containerStyle:p.value}),{default:s(()=>[t(h,{shadow:"never"},{default:s(()=>[t(n,{class:"info",model:p.value,"label-position":"right","label-width":"120px"},{default:s(()=>[(i(!0),m(b,null,y(l.value,(r,c)=>(i(),d(f,E({key:`item-${c}`,ref_for:!0},r,{modelValue:p.value,"onUpdate:modelValue":e[0]||(e[0]=k=>p.value=k)}),null,16,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1},16)}}}),V=_(T,[["__scopeId","data-v-2c858f20"]]),H=F({__name:"gird-justify-items",setup(v){const g=o([{field:"align-items",label:"align-items",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch",value:"stretch"}]},{field:"justify-items",label:"justify-items",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch",value:"stretch"}]},{field:"place-items",label:"place-items",mode:"slot",showComputed:()=>$(()=>{const{"align-items":p,"justify-items":a}=l.value;return p===a?p:`${p} ${a}`})}]),l=o({"justify-items":"stretch","align-items":"stretch"});return(p,a)=>{const e=u("el-text"),n=u("el-form"),h=u("el-card");return i(),d(B,E({class:"justify-items"},{containerStyle:l.value}),{default:s(()=>[t(h,{shadow:"never"},{default:s(()=>[t(n,{class:"info",model:l.value,"label-position":"right","label-width":"120px"},{default:s(()=>[(i(!0),m(b,null,y(g.value,(r,c)=>(i(),d(f,E({key:`item-${c}`,ref_for:!0},r,{modelValue:l.value,"onUpdate:modelValue":a[0]||(a[0]=k=>l.value=k)}),{default:s(()=>[r.mode==="slot"?(i(),d(e,{key:0},{default:s(()=>[x(A(r.showComputed()),1)]),_:2},1024)):D("",!0)]),_:2},1040,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1},16)}}}),Q=F({__name:"grid-justify-content",setup(v){const g=o([{field:"align-content",label:"align-content",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch",value:"stretch"},{label:"space-around",value:"space-around"},{label:"space-between",value:"space-between"},{label:"space-evenly",value:"space-evenly"}]},{field:"justify-content",label:"justify-content",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch",value:"stretch"},{label:"space-around",value:"space-around"},{label:"space-between",value:"space-between"},{label:"space-evenly",value:"space-evenly"}]},{field:"place-content",label:"place-content",mode:"slot",showComputed:()=>$(()=>{const{"align-content":p,"justify-content":a}=l.value;return p===a?p:`${p} ${a}`})}]),l=o({"justify-content":"stretch","align-content":"stretch"});return(p,a)=>{const e=u("el-text"),n=u("el-form"),h=u("el-card");return i(),d(B,E({class:"justify-content"},{containerStyle:l.value}),{default:s(()=>[t(h,{shadow:"never"},{default:s(()=>[t(n,{class:"info",model:l.value,"label-position":"right","label-width":"120px"},{default:s(()=>[(i(!0),m(b,null,y(g.value,(r,c)=>(i(),d(f,E({key:`item-${c}`,ref_for:!0},r,{modelValue:l.value,"onUpdate:modelValue":a[0]||(a[0]=k=>l.value=k)}),{default:s(()=>[r.mode==="slot"?(i(),d(e,{key:0},{default:s(()=>[x(A(r.showComputed()),1)]),_:2},1024)):D("",!0)]),_:2},1040,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1},16)}}}),K=_(Q,[["__scopeId","data-v-1d95e0be"]]),W=F({__name:"grid-auto-rows",setup(v){const g=S(),l=o([{field:"grid-auto-flow",label:"grid-auto-flow",mode:"select",options:[{label:"row",value:"row"},{label:"column",value:"column"},{label:"row dense",value:"row dense"},{label:"column dense",value:"column dense"}]},{field:"grid-auto-rows",label:"grid-auto-rows",mode:"text"},{field:"grid-auto-columns",label:"grid-auto-columns",mode:"text"}]),p=o({"grid-auto-flow":g["grid-auto-flow"]||"row","grid-auto-rows":"auto","grid-auto-columns":"auto"});return(a,e)=>{const n=u("el-form"),h=u("el-card");return i(),d(B,E({class:"grid-auto-flow"},{containerStyle:p.value}),{default:s(()=>[t(h,{shadow:"never"},{default:s(()=>[t(n,{class:"info",model:p.value,"label-position":"right","label-width":"150px"},{default:s(()=>[(i(!0),m(b,null,y(l.value,(r,c)=>(i(),d(f,E({key:`item-${c}`,ref_for:!0},r,{modelValue:p.value,"onUpdate:modelValue":e[0]||(e[0]=k=>p.value=k)}),M({_:2},[r.append?{name:"append",fn:s(()=>[x(A(r.append),1)]),key:"0"}:void 0]),1040,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1},16)}}}),X=_(W,[["__scopeId","data-v-22973181"]]),Y=F({__name:"grid-column-start",setup(v){P(n=>({"85794a2a":e.value["grid-column-start"],"6f90c5e4":e.value["grid-column-end"],"04d67a4a":e.value["grid-row-start"],"1ffb69d4":e.value["grid-row-end"]}));const g=S(),l=o([{field:"grid-auto-flow",label:"grid-auto-flow",mode:"select",options:[{label:"row",value:"row"},{label:"column",value:"column"},{label:"row dense",value:"row dense"},{label:"column dense",value:"column dense"}]}]),p=o([{field:"grid-column-start",label:"grid-column-start",mode:"input number"},{field:"grid-column-end",label:"grid-column-end",mode:"input number"},{field:"grid-row-start",label:"grid-row-start",mode:"input number"},{field:"grid-row-end",label:"grid-row-end",mode:"input number"}]),a=o({"grid-auto-flow":g["grid-auto-flow"]||"row"}),e=o({"grid-column-start":2,"grid-column-end":4,"grid-row-start":0,"grid-row-end":0});return(n,h)=>{const r=u("el-form"),c=u("el-card");return i(),d(B,E({class:"grid-auto-flow"},{containerStyle:a.value}),{default:s(()=>[t(c,{shadow:"never"},{default:s(()=>[t(r,{class:"info",model:a.value,"label-position":"right","label-width":"120px"},{default:s(()=>[(i(!0),m(b,null,y(l.value,(k,w)=>(i(),d(f,E({key:`container-${w}`,ref_for:!0},k,{modelValue:a.value,"onUpdate:modelValue":h[0]||(h[0]=q=>a.value=q)}),null,16,["modelValue"]))),128))]),_:1},8,["model"])]),_:1}),t(c,{shadow:"never"},{default:s(()=>[t(r,{class:"info",model:e.value,"label-position":"right","label-width":"150px"},{default:s(()=>[(i(!0),m(b,null,y(p.value,(k,w)=>(i(),d(f,E({key:`item-${w}`,ref_for:!0},k,{modelValue:e.value,"onUpdate:modelValue":h[1]||(h[1]=q=>e.value=q)}),null,16,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1},16)}}}),Z=_(Y,[["__scopeId","data-v-305cbbe1"]]),ss=F({__name:"grid-area",setup(v){P(p=>({"67ead5fa":l.value["grid-area"]}));const g=o([{field:"grid-area",label:"grid-area",mode:"text"}]),l=o({"grid-area":"a"});return(p,a)=>{const e=u("el-form"),n=u("el-card");return i(),d(B,{class:"grid-areas"},{default:s(()=>[t(n,{shadow:"never"},{default:s(()=>[t(e,{class:"info",model:l.value,"label-position":"right","label-width":"150px"},{default:s(()=>[(i(!0),m(b,null,y(g.value,(h,r)=>(i(),d(f,E({key:`item-${r}`,ref_for:!0},h,{modelValue:l.value,"onUpdate:modelValue":a[0]||(a[0]=c=>l.value=c)}),null,16,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1})}}}),is=_(ss,[["__scopeId","data-v-7a1a65a5"]]),as=F({__name:"grid-justify-self",setup(v){P(e=>({"7f8a993e":a.value["align-self"],"19e9a894":a.value["justify-self"]}));const g=o([{field:"align-items",label:"align-items",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch（默认值）",value:"stretch"}]},{field:"justify-items",label:"justify-items",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch（默认值）",value:"stretch"}]},{field:"place-items",label:"place-items",mode:"slot",showComputed:()=>$(()=>{const{"align-items":e,"justify-items":n}=l.value;return e===n?e:`${e} ${n}`})}]),l=o({"justify-items":"stretch","align-items":"stretch"}),p=o([{field:"align-self",label:"align-self",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch（默认值）",value:"stretch"}]},{field:"justify-self",label:"justify-self",mode:"select",options:[{label:"start",value:"start"},{label:"end",value:"end"},{label:"center",value:"center"},{label:"stretch（默认值）",value:"stretch"}]},{field:"place-self",label:"place-self",mode:"slot",showComputed:()=>$(()=>{const{"align-self":e,"justify-self":n}=a.value;return e===n?e:`${e} ${n}`})}]),a=o({"align-self":"start","justify-self":"start"});return(e,n)=>{const h=u("el-text"),r=u("el-form"),c=u("el-card");return i(),d(B,E({class:"justify-items"},{containerStyle:l.value}),{default:s(()=>[t(c,{shadow:"never"},{default:s(()=>[t(r,{class:"info",model:l.value,"label-position":"right","label-width":"120px"},{default:s(()=>[(i(!0),m(b,null,y(g.value,(k,w)=>(i(),d(f,E({key:`container-${w}`,ref_for:!0},k,{modelValue:l.value,"onUpdate:modelValue":n[0]||(n[0]=q=>l.value=q)}),{default:s(()=>[k.mode==="slot"?(i(),d(h,{key:0},{default:s(()=>[x(A(k.showComputed()),1)]),_:2},1024)):D("",!0)]),_:2},1040,["modelValue"]))),128))]),_:1},8,["model"])]),_:1}),t(c,{shadow:"never"},{default:s(()=>[t(r,{class:"info",model:a.value,"label-position":"right","label-width":"120px"},{default:s(()=>[(i(!0),m(b,null,y(p.value,(k,w)=>(i(),d(f,E({key:`item-${w}`,ref_for:!0},k,{modelValue:a.value,"onUpdate:modelValue":n[1]||(n[1]=q=>a.value=q)}),{default:s(()=>[k.mode==="slot"?(i(),d(h,{key:0},{default:s(()=>[x(A(k.showComputed()),1)]),_:2},1024)):D("",!0)]),_:2},1040,["modelValue"]))),128))]),_:1},8,["model"])]),_:1})]),_:1},16)}}}),es=_(as,[["__scopeId","data-v-681f4879"]]),ns=C(`<h1 id="栅格布局-grid" tabindex="-1">栅格布局 Grid <a class="header-anchor" href="#栅格布局-grid" aria-label="Permalink to &quot;栅格布局 Grid&quot;">​</a></h1><blockquote><p><a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html?spm=a2c6h.13046898.publish-article.22.6f6c6ffaBJ83z8" target="_blank" rel="noreferrer">阮一峰 Grid 栅格布局</a></p><p>祝阮一峰老师长命百岁</p></blockquote><p>网格布局（Grid）是最强大的 CSS 布局方案。</p><p>它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。</p><p>Grid 布局与 <a href="./20240411001.html">Flex</a> 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。</p><p>Flex 布局是轴线布局，只能指定&quot;项目&quot;针对轴线的位置，可以看作是<strong>一维布局</strong>。Grid 布局则是将容器划分成&quot;行&quot;和&quot;列&quot;，产生单元格，然后指定&quot;项目所在&quot;的单元格，可以看作是<strong>二维布局</strong>。Grid 布局远比 Flex 布局强大。</p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><h3 id="_1-容器和项目" tabindex="-1">1. 容器和项目 <a class="header-anchor" href="#_1-容器和项目" aria-label="Permalink to &quot;1. 容器和项目&quot;">​</a></h3><blockquote><ul><li>容器 <blockquote><p>采用网格布局的区域，称为&quot;容器&quot;（container）。</p></blockquote></li><li>项目 <blockquote><p>容器内部采用网格定位的子元素，称为&quot;项目&quot;（item）。</p></blockquote></li></ul></blockquote><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上面代码中，最外层的<code>&lt;div&gt;</code>元素就是容器，内层的三个<code>&lt;div&gt;</code>元素就是项目。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的<code>&lt;p&gt;</code>元素就不是项目。Grid 布局只对项目生效。</p></div><h3 id="_2-行和列" tabindex="-1">2. 行和列 <a class="header-anchor" href="#_2-行和列" aria-label="Permalink to &quot;2. 行和列&quot;">​</a></h3><blockquote><ul><li>行 <blockquote><p>容器里面的水平区域称为&quot;行&quot;（row）</p></blockquote></li><li>列 <blockquote><p>垂直区域称为&quot;列&quot;（column）</p></blockquote></li></ul></blockquote><p><img src="https://cdn.beekka.com/blogimg/asset/201903/1_bg2019032502.png" alt="行和列"></p><h3 id="_3-单元格" tabindex="-1">3. 单元格 <a class="header-anchor" href="#_3-单元格" aria-label="Permalink to &quot;3. 单元格&quot;">​</a></h3><p>行和列的交叉区域，称为&quot;单元格&quot;（cell）。</p><p>正常情况下，n 行和 m 列会产生 n x m 个单元格。比如，3 行 3 列会产生 9 个单元格。</p><h3 id="_4-网格线" tabindex="-1">4. 网格线 <a class="header-anchor" href="#_4-网格线" aria-label="Permalink to &quot;4. 网格线&quot;">​</a></h3><p>划分网格的线，称为&quot;网格线&quot;（grid line）。水平网格线划分出行，垂直网格线划分出列。</p><p>正常情况下，n 行有 n + 1 根水平网格线，m 列有 m + 1 根垂直网格线，比如三行就有四根水平网格线。</p><p><img src="https://cdn.beekka.com/blogimg/asset/201903/1_bg2019032503.png" alt="网格线"></p><h2 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h2><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。</p><h3 id="_1-display" tabindex="-1">1. display <a class="header-anchor" href="#_1-display" aria-label="Permalink to &quot;1. display&quot;">​</a></h3><blockquote><ul><li>grid <blockquote><p>指定一个容器采用网格布局。<strong>默认情况下，容器元素都是块级元素</strong>，但也可以设成行内元素。</p></blockquote></li><li>inline-grid <blockquote><p>行内元素内部采用网格布局</p></blockquote></li></ul></blockquote><div class="warning custom-block"><p class="custom-block-title">注意</p><p>设为网格布局以后，容器子元素（项目）的 <code>float</code>、<code>display: inline-block</code>、<code>display: table-cell</code>、<code>vertical-align</code> 和 <code>column-\\*</code>等设置都将失效。</p></div><h3 id="_2-grid-template-columns-grid-template-rows" tabindex="-1">2. grid-template-columns，grid-template-rows <a class="header-anchor" href="#_2-grid-template-columns-grid-template-rows" aria-label="Permalink to &quot;2. grid-template-columns，grid-template-rows&quot;">​</a></h3><p>容器指定了网格布局以后，接着就要划分行和列。<code>grid-template-columns</code> 属性定义每一列的列宽，<code>grid-template-rows</code> 属性定义每一行的行高。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 可以是绝对值 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 也可以是相对单位 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>除了绝对单位和相对单位之外，还可以使用以下 css 函数和属性值</p><p><strong>1. repeat()</strong></p><p>有时候，重复写同样的值非常麻烦，尤其网格很多时。这时，可以使用 <code>repeat()</code>函数，简化重复的值。上面的代码用 <code>repeat()</code>改写如下。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.33</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>repeat()</code>接受两个参数，第一个参数是重复的次数（上例是 3），第二个参数是所要重复的值。</p><p><code>repeat()</code>重复某种模式也是可以的。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上面代码定义了 6 列，第一列和第四列的宽度为 <code>100px</code>，第二列和第五列为 <code>20px</code>，第三列和第六列为 <code>80px</code>。</p><p><strong>2. auto-fill</strong></p><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用 <code>auto-fill</code> 关键字表示自动填充。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto-fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>3. auto-fit</strong></p><p>除了 <code>auto-fill</code>，还有一个关键字 <code>auto-fit</code>，两者的行为基本是相同的。只有当容器足够宽，可以在一行容纳所有单元格，并且单元格宽度不固定的时候，才会有行为差异：<code>auto-fill</code> 会用空格子填满剩余宽度，<code>auto-fit</code> 则会尽量扩大单元格的宽度。</p><p><strong>4. fr</strong></p><p>为了方便表示比例关系，网格布局提供了 <code>fr</code> 关键字（fraction 的缩写，意为&quot;片段&quot;）。如果两列的宽度分别为 <code>1fr</code> 和 <code>2fr</code>，就表示后者是前者的两倍。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 两个相同宽度的列 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>fr</code> 可以与绝对长度的单位结合使用，这时会非常方便。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>5. minmax()</strong></p><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> minmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上面代码中，<code>minmax(100px, 1fr)</code>表示列宽不小于 <code>100px</code>，不大于 <code>1fr</code>。</p><p><strong>6. auto</strong></p><p><code>auto</code> 关键字表示由浏览器自己决定长度。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上面代码中，第二列的宽度，<strong>基本上等于该列单元格的最大宽度</strong>，除非单元格内容设置了 <code>min-width</code>，且这个值大于最大宽度。</p><p><strong>7. 网格线的名称</strong></p><p><code>grid-template-columns</code> 属性和 <code>grid-template-rows</code> 属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [c1] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [c2] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [c3] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [c4];</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [r1] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [r2] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [r3] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [r4];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上面代码指定网格布局为 3 行 x 3 列，因此有 4 根垂直网格线和 4 根水平网格线。方括号里面依次是这八根线的名字。</p><p>网格布局允许同一根线有多个名字，比如<code>[fifth-line row-5]</code>。</p><h3 id="_3-row-gap-column-gap-gap" tabindex="-1">3. row-gap，column-gap，gap <a class="header-anchor" href="#_3-row-gap-column-gap-gap" aria-label="Permalink to &quot;3. row-gap，column-gap，gap&quot;">​</a></h3><blockquote><ul><li>row-gap <blockquote><p>设置行与行的间隔（行间距）</p></blockquote></li><li>column-gap <blockquote><p>属性设置列与列的间隔（列间距）</p></blockquote></li><li>gap <blockquote><p>column-gap 和 row-gap 的合并简写形式</p></blockquote></li></ul></blockquote><h3 id="_4-grid-template-areas" tabindex="-1">4. grid-template-areas <a class="header-anchor" href="#_4-grid-template-areas" aria-label="Permalink to &quot;4. grid-template-areas&quot;">​</a></h3><p>网格布局允许指定&quot;区域&quot;（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code> 属性用于定义区域。</p>`,65),ls=C(`<div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;a b c&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;d e f&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;g h i&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>上面代码先划分出 9 个单元格，然后将其定名为 <code>a</code> 到 <code>i</code> 的九个区域，分别对应这九个单元格。</p><p>多个单元格合并成一个区域的写法如下。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;a a a&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;b b b&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;c c c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>上面代码将 9 个单元格分成 <code>a</code>、<code>b</code>、<code>c</code> 三个区域。</p><p>下面是一个布局实例。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;header header header&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;main main sidebar&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;footer footer footer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>上面代码中，顶部是页眉区域 <code>header</code>，底部是页脚区域 <code>footer</code>，中间部分则为 <code>main</code> 和 <code>sidebar</code>。</p><p>如果某些区域不需要利用，则使用&quot;点&quot;（.）表示。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;a . c&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;d . f&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;g . i&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p><p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。</p><p>比如，区域名为 <code>header</code>，则起始位置的水平网格线和垂直网格线叫做 <code>header-start</code>，终止位置的水平网格线和垂直网格线叫做 <code>header-end</code>。</p><h3 id="_5-grid-auto-flow" tabindex="-1">5. grid-auto-flow <a class="header-anchor" href="#_5-grid-auto-flow" aria-label="Permalink to &quot;5. grid-auto-flow&quot;">​</a></h3><p>划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是&quot;先行后列&quot;，即先填满第一行，再开始放入第二行，即下图数字的顺序。</p><p>这个顺序由 <code>grid-auto-flow</code> 属性决定，默认值是 <code>row</code>，即&quot;先行后列&quot;。也可以将它设成 <code>column</code>，变成&quot;先列后行&quot;。</p><p><code>grid-auto-flow</code> 属性除了设置成 <code>row</code> 和 <code>column</code>，还可以设成 <code>row dense</code> 和 <code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p><p>下面的例子让 1 号项目和 2 号项目各占据两个单元格，然后在默认的 <code>grid-auto-flow: row</code> 情况下，会产生下面这样的布局。</p><p id="grid-auto-flow"></p>`,19),ts=j("p",null,"上面例子中，1 号项目后面的位置是空的，这是因为 3 号项目默认跟着 2 号项目，所以会排在 2 号项目后面。",-1),ps=j("p",null,[x("现在修改设置，设为 "),j("code",null,"row dense"),x('，表示"先行后列"，并且尽可能紧密填满，尽量不出现空格。')],-1),rs=C(`<p>上图会先填满第一行，再填满第二行，所以 3 号项目就会紧跟在 1 号项目的后面。8 号项目和 9 号项目就会排到第四行。</p><p>如果将设置改为 <code>column dense</code>，表示&quot;先列后行&quot;，并且尽量填满空格。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-auto-flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">column</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,3),hs=C('<h3 id="_6-justify-items-align-items-place-items" tabindex="-1">6. justify-items，align-items，place-items <a class="header-anchor" href="#_6-justify-items-align-items-place-items" aria-label="Permalink to &quot;6. justify-items，align-items，place-items&quot;">​</a></h3><p><code>justify-items</code> 属性设置单元格内容的水平位置（左中右），<code>align-items</code> 属性设置单元格内容的垂直位置（上中下）。</p><p><code>place-items</code> 属性是 <code>align-items</code> 属性和 <code>justify-items</code> 属性的合并简写形式（遵循<strong>先上下、后左右</strong>的顺序）。</p>',3),ds=C('<h3 id="_7-justify-content-align-content-place-content" tabindex="-1">7. justify-content，align-content，place-content <a class="header-anchor" href="#_7-justify-content-align-content-place-content" aria-label="Permalink to &quot;7. justify-content，align-content，place-content&quot;">​</a></h3><p><code>justify-content</code> 属性是整个内容区域在容器里面的水平位置（左中右），<code>align-content</code> 属性是整个内容区域的垂直位置（上中下）。</p><p><code>place-content</code> 属性是 <code>align-content</code> 属性和 <code>justify-content</code> 属性的合并简写形式（遵循<strong>先上下、后左右</strong>的顺序）。</p>',3),ks=C('<h3 id="_8-grid-auto-columns-grid-auto-rows" tabindex="-1">8. grid-auto-columns，grid-auto-rows <a class="header-anchor" href="#_8-grid-auto-columns-grid-auto-rows" aria-label="Permalink to &quot;8. grid-auto-columns，grid-auto-rows&quot;">​</a></h3><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有 3 列，但是某一个项目指定在第 5 行。这时，浏览器会自动生成多余的网格，以便放置项目。</p><p><code>grid-auto-columns</code> 属性和 <code>grid-auto-rows</code> 属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与 <code>grid-template-columns</code> 和 <code>grid-template-rows</code> 完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p><p>在 <a href="#grid-auto-flow"><code>grid-auto-flow</code></a> 的例子中，7、8、9 三个项目被挤到新的一行，因为没有指定项目高度，单元格按照内容重新计算了高度。使用本节提到的两个属性可解决这一问题。</p>',4),os=C('<h3 id="_9-grid-template-grid" tabindex="-1">9. grid-template，grid <a class="header-anchor" href="#_9-grid-template-grid" aria-label="Permalink to &quot;9. grid-template，grid&quot;">​</a></h3><p><code>grid-template</code> 属性是 <code>grid-template-columns</code>、<code>grid-template-rows</code> 和 <code>grid-template-areas</code> 这三个属性的合并简写形式。</p><p><code>grid</code> 属性是 <code>grid-template-rows</code>、<code>grid-template-columns</code>、<code>grid-template-areas</code>、<code>grid-auto-rows</code>、<code>grid-auto-columns</code>、<code>grid-auto-flow</code> 这六个属性的合并简写形式。</p><div class="tip custom-block"><p class="custom-block-title">小贴士</p><p>从易读易写的角度考虑，<strong>建议不要合并属性</strong>。</p></div><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h2><h3 id="_1-grid-column-start-grid-column-end-grid-row-start-grid-row-end" tabindex="-1">1. grid-column-start，grid-column-end，grid-row-start，grid-row-end <a class="header-anchor" href="#_1-grid-column-start-grid-column-end-grid-row-start-grid-row-end" aria-label="Permalink to &quot;1. grid-column-start，grid-column-end，grid-row-start，grid-row-end&quot;">​</a></h3><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p>',7),cs=C(`<p>上面的案例中，只指定了 1 号项目的左右边框，没有指定上下边框，所以会采用默认位置，即上边框是第一根水平网格线，下边框是第二根水平网格线。</p><p>除了 1 号项目以外，其他项目都没有指定位置，由浏览器自动布局，这时它们的位置由容器的 <code>grid-auto-flow</code> 属性决定，这个属性的默认值是 <code>row</code>，因此会&quot;先行后列&quot;进行排列。读者可以把这个属性的值分别改成 <code>column</code>、<code>row dense</code> 和 <code>column dense</code>，看看其他项目的位置发生了怎样的变化。</p><div class="info custom-block"><p class="custom-block-title">小测试</p><p>试一试在上面的案例中摆放出图片中的样式 <img src="https://cdn.beekka.com/blogimg/asset/201903/bg2019032527.png" alt="挑战"></p></div><p>这四个属性的值还可以使用 <code>span</code> 关键字，表示&quot;跨越&quot;，即左右边框（上下边框）之间跨越多少个网格。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: span </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上面代码表示，1 号项目的左边框距离右边框跨越 2 个网格。</p><div class="tip custom-block"><p class="custom-block-title">小贴士</p><p>使用这四个属性，如果产生了项目的重叠，则使用 <code>z-index</code> 属性指定项目的重叠顺序。</p></div><h3 id="_2-grid-column-grid-row" tabindex="-1">2. grid-column，grid-row <a class="header-anchor" href="#_2-grid-column-grid-row" aria-label="Permalink to &quot;2. grid-column，grid-row&quot;">​</a></h3><blockquote><ul><li><code>grid-column</code><blockquote><p><code>grid-column-start</code> 和 <code>grid-column-end</code> 的合并简写形式，</p></blockquote></li><li><code>grid-row</code><blockquote><p><code>grid-row-start</code> 和 <code>grid-row-end</code> 的合并简写形式。</p></blockquote></li></ul></blockquote><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;start-line&gt; / &lt;end-line&gt;;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;start-line&gt; / &lt;end-line&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>下面是一个例子。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上面代码中，项目 <code>item-1</code> 占据第一行，从第一根列线到第三根列线。</p><p>这两个属性之中，也可以使用 <code>span</code> 关键字，表示跨越多少个网格。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#b03532</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#b03532</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / span </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / span </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上面代码中，项目 <code>item-1</code> 占据的区域，包括第一行 + 第二行、第一列 + 第二列。</p><p>斜杠以及后面的部分可以省略，默认跨越一个网格。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上面代码中，项目 <code>item-1</code> 占据左上角第一个网格。</p><h3 id="_3-grid-area" tabindex="-1">3. grid-area <a class="header-anchor" href="#_3-grid-area" aria-label="Permalink to &quot;3. grid-area&quot;">​</a></h3><p><code>grid-area</code> 属性指定项目放在哪一个区域，并且要与 <code>grid-template-areas</code> 联动使用，<strong>否则不生效</strong>。</p><div class="language-scss vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;a b c&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;d e f&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;g h i&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: a;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>上面代码中，1 号项目位于 a 区域，效果如下。</p>`,23),us=C(`<p>grid-area 属性还可用作 grid-row-start、grid-column-start、grid-row-end、grid-column-end 的合并简写形式，直接指定项目的位置。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>下面是一个例子。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-justify-self-align-self-place-self" tabindex="-1">4. justify-self，align-self，place-self <a class="header-anchor" href="#_4-justify-self-align-self-place-self" aria-label="Permalink to &quot;4. justify-self，align-self，place-self&quot;">​</a></h3>`,5),gs=C(`<p><code>place-self</code> 属性是 <code>align-self</code> 属性和 <code>justify-self</code> 属性的合并简写形式。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  place-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;align-self&gt; &lt;justify-self&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>下面是一个例子。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="拷贝代码" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  place-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果省略第二个值，<code>place-self</code> 属性会认为这两个值相等。</p>`,5),ys=JSON.parse('{"title":"栅格布局 Grid","description":"","frontmatter":{},"headers":[],"relativePath":"css/20240411002.md","filePath":"css/20240411002.md","lastUpdated":1717904896000}'),Es={name:"css/20240411002.md"},Fs=F({...Es,setup(v){return(g,l)=>(i(),m("div",null,[ns,t(L),ls,t(V,{"grid-auto-flow":"row"}),ts,ps,t(V,{"grid-auto-flow":"row dense"}),rs,t(V,{"grid-auto-flow":"column dense"}),hs,t(H),ds,t(K),ks,t(X),os,t(Z),cs,t(is),us,t(es),gs]))}});export{ys as __pageData,Fs as default};
