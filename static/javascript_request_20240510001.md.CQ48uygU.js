import{_ as t,c as e,o as a,aR as l}from"./chunks/framework.BRuNT-jK.js";const _=JSON.parse('{"title":"9 种常见的前端跨域解决方案","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/request/20240510001.md","filePath":"javascript/request/20240510001.md","lastUpdated":1715776172000}'),d={name:"javascript/request/20240510001.md"},o=l('<h1 id="_9-种常见的前端跨域解决方案" tabindex="-1">9 种常见的前端跨域解决方案 <a class="header-anchor" href="#_9-种常见的前端跨域解决方案" aria-label="Permalink to &quot;9 种常见的前端跨域解决方案&quot;">​</a></h1><blockquote><p><a href="https://blog.csdn.net/xiaolinlife/article/details/130982886" target="_blank" rel="noreferrer">原文</a></p></blockquote><h2 id="什么是跨域" tabindex="-1">什么是跨域？ <a class="header-anchor" href="#什么是跨域" aria-label="Permalink to &quot;什么是跨域？&quot;">​</a></h2><p>首先声明一点，跨域是浏览器拦截的行为，请求已经发送到后端，后端返回的响应数据被浏览器拦截住了，这就是跨域的流程。</p><p>在前端领域中，跨域是指浏览器允许向服务器发送跨域请求，从而克服 Ajax 只能同源使用的限制。</p><p>什么是同源策略？</p><p>同源策略是一种约定，由 Netscape 公司 1995 年引入浏览器，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到 XSS、CSFR 等攻击。所谓同源是指&quot;协议+域名+端口&quot;三者相同，即便两个不同的域名指向同一个 ip 地址，也非同源。 同源策略限制以下几种行为：</p><ul><li>Cookie、LocalStorage 和 IndexDB 无法读取</li><li>DOM 和 JS 对象无法获得</li><li>AJAX 请求不能发送</li></ul><h2 id="常见的跨域场景" tabindex="-1">常见的跨域场景 <a class="header-anchor" href="#常见的跨域场景" aria-label="Permalink to &quot;常见的跨域场景&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">URL</th><th style="text-align:left;">说明</th><th style="text-align:left;">是否允许通信</th></tr></thead><tbody><tr><td style="text-align:left;"><code>http://www.domain.com/a.js</code> <br> <code>http://www.domain.com/b.js</code></td><td style="text-align:left;">同一域名，不同文件或路径</td><td style="text-align:left;">允许</td></tr><tr><td style="text-align:left;"><code>http://www.domain.com:8000/a.js</code> <br> <code>http://www.domain.com/b.js</code></td><td style="text-align:left;">同一域名，不同端口</td><td style="text-align:left;">不允许</td></tr><tr><td style="text-align:left;"><code>http://www.domain.com/a.js</code> <br> <code>https://www.domain.com/b.js</code></td><td style="text-align:left;">同一域名，不同协议</td><td style="text-align:left;">不允许</td></tr><tr><td style="text-align:left;"><code>http://www.domain.com/a.js</code> <br> <code>http://192.168.4.12/b.js</code></td><td style="text-align:left;">域名和域名对应相同 ip</td><td style="text-align:left;">不允许</td></tr><tr><td style="text-align:left;"><code>http://www.domain.com/a.js</code> <br> <code>http://x.domain.com/b.js</code> <br> <code>http://domain.com/c.js</code></td><td style="text-align:left;">主域相同，子域不同</td><td style="text-align:left;">不允许</td></tr><tr><td style="text-align:left;"><code>http://www.domain1.com/a.js</code> <br> <code>http://www.domain2.com/b.js</code></td><td style="text-align:left;">不同域名</td><td style="text-align:left;">不允许</td></tr></tbody></table><h2 id="_9-种跨域解决方案" tabindex="-1">9 种跨域解决方案 <a class="header-anchor" href="#_9-种跨域解决方案" aria-label="Permalink to &quot;9 种跨域解决方案&quot;">​</a></h2><p>直接看原文就完了</p>',12),i=[o];function c(r,s,n,h,p,m){return a(),e("div",null,i)}const x=t(d,[["render",c]]);export{_ as __pageData,x as default};
