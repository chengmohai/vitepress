import{_ as t,c as e,o as s,aR as a}from"./chunks/framework.BRuNT-jK.js";const m=JSON.parse('{"title":"农行项目","description":"","frontmatter":{},"headers":[],"relativePath":"others/projects/003.md","filePath":"others/projects/003.md","lastUpdated":1715521816000}'),n={name:"others/projects/003.md"},i=a(`<h1 id="农行项目" tabindex="-1">农行项目 <a class="header-anchor" href="#农行项目" aria-label="Permalink to &quot;农行项目&quot;">​</a></h1><h2 id="心得" tabindex="-1">心得 <a class="header-anchor" href="#心得" aria-label="Permalink to &quot;心得&quot;">​</a></h2><blockquote><p>如果一个页面内组件功能比较复杂，应考虑拆分成多个组件；<br>页面组件切换使用 component 还是 router-view</p></blockquote><h3 id="_1-如果一个页面内组件功能比较复杂-应考虑拆分成多个组件" tabindex="-1">1. 如果一个页面内组件功能比较复杂，应考虑拆分成多个组件 <a class="header-anchor" href="#_1-如果一个页面内组件功能比较复杂-应考虑拆分成多个组件" aria-label="Permalink to &quot;1. 如果一个页面内组件功能比较复杂，应考虑拆分成多个组件&quot;">​</a></h3><p>农行物业调查问卷组件的问卷详情页具有修改控件、新增控件、预览问卷等功能，如果在一个面内完成，页面代码量将非常复杂，不利于后期维护</p><p><strong>解决方案</strong></p><p>将详情页面分拆成两个组件</p><table><thead><tr><th style="text-align:center;">组件名称</th><th style="text-align:center;">英文名称</th><th style="text-align:center;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">调查问卷预览页</td><td style="text-align:center;">QuesitonPreview</td><td style="text-align:center;">只预览状态为已发布(status==1)的问卷</td></tr><tr><td style="text-align:center;">问卷详情及修改</td><td style="text-align:center;">QuestionDetailAndEdit</td><td style="text-align:center;">对状态为未发布(status==0)的问卷进行查看和修改</td></tr></tbody></table><h3 id="_2-页面组件切换使用-component-还是-router-view" tabindex="-1">2. 页面组件切换使用 component 还是 router-view <a class="header-anchor" href="#_2-页面组件切换使用-component-还是-router-view" aria-label="Permalink to &quot;2. 页面组件切换使用 component 还是 router-view&quot;">​</a></h3><p>农行物业项目调查问卷模块的流程图</p><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A[调查问卷列表页 QuestionList]--&gt;B(点击问卷详情获取问卷status)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B--&gt;|status==0| D[问题还未发布]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B--&gt;|status==1| E[问题已发布]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">E--&gt;F[进入预览组件 QuestionPreview]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D--&gt;G[进入问题详情及编辑组件 QuestionDetailAndEdit]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>第一版使用的方法是在问卷模块的根组件中使用<code>&lt;component :is=&quot;xxx&quot;&gt;</code>方法组织页面显示和跳转</p><p>功能不同的组件使用<code>&lt;router-view&gt;</code>也许更适合，这一点应在未来的开发中加以验证</p>`,13),r=[i];function l(o,p,c,d,h,u){return s(),e("div",null,r)}const g=t(n,[["render",l]]);export{m as __pageData,g as default};
